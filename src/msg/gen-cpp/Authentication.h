/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef Authentication_H
#define Authentication_H

#include <thrift/TDispatchProcessor.h>
#include "authenication_types.h"

namespace authentication {

class AuthenticationIf {
 public:
  virtual ~AuthenticationIf() {}
  virtual bool pingActive(const int32_t genNum) = 0;
  virtual bool login(const User& user) = 0;
  virtual bool logout(const User& user) = 0;
};

class AuthenticationIfFactory {
 public:
  typedef AuthenticationIf Handler;

  virtual ~AuthenticationIfFactory() {}

  virtual AuthenticationIf* getHandler(const ::apache::thrift::TConnectionInfo& connInfo) = 0;
  virtual void releaseHandler(AuthenticationIf* /* handler */) = 0;
};

class AuthenticationIfSingletonFactory : virtual public AuthenticationIfFactory {
 public:
  AuthenticationIfSingletonFactory(const boost::shared_ptr<AuthenticationIf>& iface) : iface_(iface) {}
  virtual ~AuthenticationIfSingletonFactory() {}

  virtual AuthenticationIf* getHandler(const ::apache::thrift::TConnectionInfo&) {
    return iface_.get();
  }
  virtual void releaseHandler(AuthenticationIf* /* handler */) {}

 protected:
  boost::shared_ptr<AuthenticationIf> iface_;
};

class AuthenticationNull : virtual public AuthenticationIf {
 public:
  virtual ~AuthenticationNull() {}
  bool pingActive(const int32_t /* genNum */) {
    bool _return = false;
    return _return;
  }
  bool login(const User& /* user */) {
    bool _return = false;
    return _return;
  }
  bool logout(const User& /* user */) {
    bool _return = false;
    return _return;
  }
};

typedef struct _Authentication_pingActive_args__isset {
  _Authentication_pingActive_args__isset() : genNum(false) {}
  bool genNum;
} _Authentication_pingActive_args__isset;

class Authentication_pingActive_args {
 public:

  static const char* ascii_fingerprint; // = "E86CACEB22240450EDCBEFC3A83970E4";
  static const uint8_t binary_fingerprint[16]; // = {0xE8,0x6C,0xAC,0xEB,0x22,0x24,0x04,0x50,0xED,0xCB,0xEF,0xC3,0xA8,0x39,0x70,0xE4};

  Authentication_pingActive_args() : genNum(0) {
  }

  virtual ~Authentication_pingActive_args() throw() {}

  int32_t genNum;

  _Authentication_pingActive_args__isset __isset;

  void __set_genNum(const int32_t val) {
    genNum = val;
  }

  bool operator == (const Authentication_pingActive_args & rhs) const
  {
    if (!(genNum == rhs.genNum))
      return false;
    return true;
  }
  bool operator != (const Authentication_pingActive_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const Authentication_pingActive_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class Authentication_pingActive_pargs {
 public:

  static const char* ascii_fingerprint; // = "E86CACEB22240450EDCBEFC3A83970E4";
  static const uint8_t binary_fingerprint[16]; // = {0xE8,0x6C,0xAC,0xEB,0x22,0x24,0x04,0x50,0xED,0xCB,0xEF,0xC3,0xA8,0x39,0x70,0xE4};


  virtual ~Authentication_pingActive_pargs() throw() {}

  const int32_t* genNum;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _Authentication_pingActive_result__isset {
  _Authentication_pingActive_result__isset() : success(false) {}
  bool success;
} _Authentication_pingActive_result__isset;

class Authentication_pingActive_result {
 public:

  static const char* ascii_fingerprint; // = "D9D3B4421B1F23CB4063C80B484E7909";
  static const uint8_t binary_fingerprint[16]; // = {0xD9,0xD3,0xB4,0x42,0x1B,0x1F,0x23,0xCB,0x40,0x63,0xC8,0x0B,0x48,0x4E,0x79,0x09};

  Authentication_pingActive_result() : success(0) {
  }

  virtual ~Authentication_pingActive_result() throw() {}

  bool success;

  _Authentication_pingActive_result__isset __isset;

  void __set_success(const bool val) {
    success = val;
  }

  bool operator == (const Authentication_pingActive_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const Authentication_pingActive_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const Authentication_pingActive_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _Authentication_pingActive_presult__isset {
  _Authentication_pingActive_presult__isset() : success(false) {}
  bool success;
} _Authentication_pingActive_presult__isset;

class Authentication_pingActive_presult {
 public:

  static const char* ascii_fingerprint; // = "D9D3B4421B1F23CB4063C80B484E7909";
  static const uint8_t binary_fingerprint[16]; // = {0xD9,0xD3,0xB4,0x42,0x1B,0x1F,0x23,0xCB,0x40,0x63,0xC8,0x0B,0x48,0x4E,0x79,0x09};


  virtual ~Authentication_pingActive_presult() throw() {}

  bool* success;

  _Authentication_pingActive_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _Authentication_login_args__isset {
  _Authentication_login_args__isset() : user(false) {}
  bool user;
} _Authentication_login_args__isset;

class Authentication_login_args {
 public:

  static const char* ascii_fingerprint; // = "A756D3DBE614FB13F70BF7F7B6EB3D73";
  static const uint8_t binary_fingerprint[16]; // = {0xA7,0x56,0xD3,0xDB,0xE6,0x14,0xFB,0x13,0xF7,0x0B,0xF7,0xF7,0xB6,0xEB,0x3D,0x73};

  Authentication_login_args() {
  }

  virtual ~Authentication_login_args() throw() {}

  User user;

  _Authentication_login_args__isset __isset;

  void __set_user(const User& val) {
    user = val;
  }

  bool operator == (const Authentication_login_args & rhs) const
  {
    if (!(user == rhs.user))
      return false;
    return true;
  }
  bool operator != (const Authentication_login_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const Authentication_login_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class Authentication_login_pargs {
 public:

  static const char* ascii_fingerprint; // = "A756D3DBE614FB13F70BF7F7B6EB3D73";
  static const uint8_t binary_fingerprint[16]; // = {0xA7,0x56,0xD3,0xDB,0xE6,0x14,0xFB,0x13,0xF7,0x0B,0xF7,0xF7,0xB6,0xEB,0x3D,0x73};


  virtual ~Authentication_login_pargs() throw() {}

  const User* user;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _Authentication_login_result__isset {
  _Authentication_login_result__isset() : success(false), ouch(false) {}
  bool success;
  bool ouch;
} _Authentication_login_result__isset;

class Authentication_login_result {
 public:

  static const char* ascii_fingerprint; // = "EF470197A1C5BF49AAC5538556BB87D9";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0x47,0x01,0x97,0xA1,0xC5,0xBF,0x49,0xAA,0xC5,0x53,0x85,0x56,0xBB,0x87,0xD9};

  Authentication_login_result() : success(0) {
  }

  virtual ~Authentication_login_result() throw() {}

  bool success;
  InvalidOperation ouch;

  _Authentication_login_result__isset __isset;

  void __set_success(const bool val) {
    success = val;
  }

  void __set_ouch(const InvalidOperation& val) {
    ouch = val;
  }

  bool operator == (const Authentication_login_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(ouch == rhs.ouch))
      return false;
    return true;
  }
  bool operator != (const Authentication_login_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const Authentication_login_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _Authentication_login_presult__isset {
  _Authentication_login_presult__isset() : success(false), ouch(false) {}
  bool success;
  bool ouch;
} _Authentication_login_presult__isset;

class Authentication_login_presult {
 public:

  static const char* ascii_fingerprint; // = "EF470197A1C5BF49AAC5538556BB87D9";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0x47,0x01,0x97,0xA1,0xC5,0xBF,0x49,0xAA,0xC5,0x53,0x85,0x56,0xBB,0x87,0xD9};


  virtual ~Authentication_login_presult() throw() {}

  bool* success;
  InvalidOperation ouch;

  _Authentication_login_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _Authentication_logout_args__isset {
  _Authentication_logout_args__isset() : user(false) {}
  bool user;
} _Authentication_logout_args__isset;

class Authentication_logout_args {
 public:

  static const char* ascii_fingerprint; // = "A756D3DBE614FB13F70BF7F7B6EB3D73";
  static const uint8_t binary_fingerprint[16]; // = {0xA7,0x56,0xD3,0xDB,0xE6,0x14,0xFB,0x13,0xF7,0x0B,0xF7,0xF7,0xB6,0xEB,0x3D,0x73};

  Authentication_logout_args() {
  }

  virtual ~Authentication_logout_args() throw() {}

  User user;

  _Authentication_logout_args__isset __isset;

  void __set_user(const User& val) {
    user = val;
  }

  bool operator == (const Authentication_logout_args & rhs) const
  {
    if (!(user == rhs.user))
      return false;
    return true;
  }
  bool operator != (const Authentication_logout_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const Authentication_logout_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class Authentication_logout_pargs {
 public:

  static const char* ascii_fingerprint; // = "A756D3DBE614FB13F70BF7F7B6EB3D73";
  static const uint8_t binary_fingerprint[16]; // = {0xA7,0x56,0xD3,0xDB,0xE6,0x14,0xFB,0x13,0xF7,0x0B,0xF7,0xF7,0xB6,0xEB,0x3D,0x73};


  virtual ~Authentication_logout_pargs() throw() {}

  const User* user;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _Authentication_logout_result__isset {
  _Authentication_logout_result__isset() : success(false), ouch(false) {}
  bool success;
  bool ouch;
} _Authentication_logout_result__isset;

class Authentication_logout_result {
 public:

  static const char* ascii_fingerprint; // = "EF470197A1C5BF49AAC5538556BB87D9";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0x47,0x01,0x97,0xA1,0xC5,0xBF,0x49,0xAA,0xC5,0x53,0x85,0x56,0xBB,0x87,0xD9};

  Authentication_logout_result() : success(0) {
  }

  virtual ~Authentication_logout_result() throw() {}

  bool success;
  InvalidOperation ouch;

  _Authentication_logout_result__isset __isset;

  void __set_success(const bool val) {
    success = val;
  }

  void __set_ouch(const InvalidOperation& val) {
    ouch = val;
  }

  bool operator == (const Authentication_logout_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    if (!(ouch == rhs.ouch))
      return false;
    return true;
  }
  bool operator != (const Authentication_logout_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const Authentication_logout_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _Authentication_logout_presult__isset {
  _Authentication_logout_presult__isset() : success(false), ouch(false) {}
  bool success;
  bool ouch;
} _Authentication_logout_presult__isset;

class Authentication_logout_presult {
 public:

  static const char* ascii_fingerprint; // = "EF470197A1C5BF49AAC5538556BB87D9";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0x47,0x01,0x97,0xA1,0xC5,0xBF,0x49,0xAA,0xC5,0x53,0x85,0x56,0xBB,0x87,0xD9};


  virtual ~Authentication_logout_presult() throw() {}

  bool* success;
  InvalidOperation ouch;

  _Authentication_logout_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

class AuthenticationClient : virtual public AuthenticationIf {
 public:
  AuthenticationClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
    setProtocol(prot);
  }
  AuthenticationClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    setProtocol(iprot,oprot);
  }
 private:
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
  setProtocol(prot,prot);
  }
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    piprot_=iprot;
    poprot_=oprot;
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
 public:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  bool pingActive(const int32_t genNum);
  void send_pingActive(const int32_t genNum);
  bool recv_pingActive();
  bool login(const User& user);
  void send_login(const User& user);
  bool recv_login();
  bool logout(const User& user);
  void send_logout(const User& user);
  bool recv_logout();
 protected:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
};

class AuthenticationProcessor : public ::apache::thrift::TDispatchProcessor {
 protected:
  boost::shared_ptr<AuthenticationIf> iface_;
  virtual bool dispatchCall(::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, const std::string& fname, int32_t seqid, void* callContext);
 private:
  typedef  void (AuthenticationProcessor::*ProcessFunction)(int32_t, ::apache::thrift::protocol::TProtocol*, ::apache::thrift::protocol::TProtocol*, void*);
  typedef std::map<std::string, ProcessFunction> ProcessMap;
  ProcessMap processMap_;
  void process_pingActive(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_login(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_logout(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
 public:
  AuthenticationProcessor(boost::shared_ptr<AuthenticationIf> iface) :
    iface_(iface) {
    processMap_["pingActive"] = &AuthenticationProcessor::process_pingActive;
    processMap_["login"] = &AuthenticationProcessor::process_login;
    processMap_["logout"] = &AuthenticationProcessor::process_logout;
  }

  virtual ~AuthenticationProcessor() {}
};

class AuthenticationProcessorFactory : public ::apache::thrift::TProcessorFactory {
 public:
  AuthenticationProcessorFactory(const ::boost::shared_ptr< AuthenticationIfFactory >& handlerFactory) :
      handlerFactory_(handlerFactory) {}

  ::boost::shared_ptr< ::apache::thrift::TProcessor > getProcessor(const ::apache::thrift::TConnectionInfo& connInfo);

 protected:
  ::boost::shared_ptr< AuthenticationIfFactory > handlerFactory_;
};

class AuthenticationMultiface : virtual public AuthenticationIf {
 public:
  AuthenticationMultiface(std::vector<boost::shared_ptr<AuthenticationIf> >& ifaces) : ifaces_(ifaces) {
  }
  virtual ~AuthenticationMultiface() {}
 protected:
  std::vector<boost::shared_ptr<AuthenticationIf> > ifaces_;
  AuthenticationMultiface() {}
  void add(boost::shared_ptr<AuthenticationIf> iface) {
    ifaces_.push_back(iface);
  }
 public:
  bool pingActive(const int32_t genNum) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->pingActive(genNum);
    }
    return ifaces_[i]->pingActive(genNum);
  }

  bool login(const User& user) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->login(user);
    }
    return ifaces_[i]->login(user);
  }

  bool logout(const User& user) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->logout(user);
    }
    return ifaces_[i]->logout(user);
  }

};

} // namespace

#endif
